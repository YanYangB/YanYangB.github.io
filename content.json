{"pages":[{"title":"","text":"","link":"/about/index.html"}],"posts":[{"title":"Ubuntu无root安装软件","text":"Linux下非root用户安装软件的一般流程: 下载源代码，通过wget或者url下载； 解压源代码安装包，一般为tar.gz，对应命令为tar -zxvf xxxxx.tar.gz； 切换到解压后的目录，运行./configure --prefix=/path/to/install，使用./configure --help可以列出可用选项，其中--prefix就是配置安装目录。例如：./configure --prefix=/home/xxx/.local； 编译源码并安装，make -j &amp;&amp; make install，-j参数是并行编译，提高编译速度； 变更环境变量，在.zshrc或者.bashrc中加入export。","link":"/2019/10/01/Ubuntu%E6%97%A0root%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/"},{"title":"conda常用命令","text":"环境相关 查看已有环境conda env list 新建环境conda create -n env_name [python=3.6]新建一个名为env_name的环境，其python版本为3.6 进入环境（对于conda 4.xx）conda activate env_name 退出环境conda deactivate 导出环境为yml（用于向别人分发环境时）conda env export &gt; environment.yml 根据yml文件创建环境conda env create -f environment.yml 删除环境conda remove -n env_name --all 重命名环境conda create --name new_name --clone old_name 默认在每次打开新的terminal时，自动进入base环境，可以将其关闭conda config --set auto_activate_base false故可将这句命令加入.zshrc/.bashrc中，自动禁止加载base环境 conda相关 更新condaconda update conda 卸载condarm -fr ~/anaconda 包相关 查看当前环境安装的包conda list [-n package_name] 搜索包conda search package_name 安装包conda install package_name[=version=build_version] 当想要安装pytorch 0.2.0 py27cuda8.0cudnn6.0_0时，使用：conda install pytorch=0.2.0=py27cuda8.0cudnn6.0_0 升级包conda update package_name 升级所有包conda update --all 卸载包conda uninstall package_name 2019双十一快乐 ☺","link":"/2019/11/11/conda%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"title":"Step up to Linux","text":"记录Linux的安装与配置过程安装为Ubuntu单系统 1.准备 下载Ubuntu镜像, 建议下载LTS版本。(官网下载速度较慢时考虑清华镜像) 制作启动盘, 建议使用Rufus,操作简单，在制作时要格式化Ｕ盘，先做好Ｕ盘备份工作。 若要安装双系统，还要清理出一块磁盘空间，参考知乎文章 2.安装(以DELL为例)建议先阅读一些安装教程: https://blog.csdn.net/baidu_36602427/article/details/86548203https://www.jianshu.com/p/54d9a3a695cchttp://tonyzzx.github.io/2017/12/23/U%20%E7%9B%98%E5%AE%89%E8%A3%85%20Ubuntu%2016.04%20%EF%BC%88%E5%8D%95%E7%B3%BB%E7%BB%9F%EF%BC%89%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/https://blog.csdn.net/u010801439/article/details/80485251https://www.glbwl.com/u-install-ubuntu.html 插入Ｕ盘，启动过程中出现DELL徽标时，快速按F12键。这将使您转至Boot Once（启动一次）菜单。通过键盘选择UEFI启动方式。同时，建议按F2进入BIOS，将 Security 选项中的 Secure Boot 设置为 Disabled 。 选择语言，键盘布局，一路Next就好，在选择网络时不建议联网，建议正常安装并且为图形或无线硬件以及其他媒体格式安装第三方软件，在安装类型时！前两个选项会自动分区安装，省时省心，但这里推荐自己手动分区，这样可以熟悉自己的分区方便后续管理，因此这里我们选择其他选项 接下来我们需要手动分区(自动分区即可跳过次步骤)。以本人电脑为例，128G固态，500G机械。 EFI分区 512M SSD 主分区 空间起始位置 (用作EFI启动，512M足够) / SSD剩余空间 主分区 空间起始位置 (根目录) 交换分区 4G 机械硬盘 主分区 空间起始位置 (按照内存大小来设置，一般为内存大小的两倍，但也不至于过大，本机内存12G) /home 机械硬盘剩余空间 逻辑分区 空间起始位置 (存放个人文件，越大越好) 注意: 安装启动引导器的设备选择为EFI分区对应的位置 等待安装完成 … … 享用全新的Ubuntu Ｏ（∩＿∩）Ｏ～～ 3.配置 美化 一个赏心悦目的界面能给人工作的欲望*此处的美化强烈推荐知乎专栏世上最良心***，按照文章一步步来就能打造很美观的界面 注意:*不要操作文章开头关于安装显卡驱动的部分，我们会在后续安装 Deep Learning 配置建议先阅读几篇教程，对流程有基本了解: https://blog.csdn.net/xierhacker/article/details/53035989https://blog.csdn.net/dudu815110/article/details/87167518http://www.pianshen.com/article/527837750/https://www.vicw.com/groups/water/topics/200https://blog.csdn.net/qq_32408773/article/details/84111244https://my.oschina.net/u/2306127/blog/2877804 Ubuntu18.04自带Python3.6，关于如何安装pip或者conda请自行百度在安装pip之前，建议安装几个依赖包: sudo apt install build-essential python3-dev python3-setuptools 安装NVIDIA驱动 可以使用命令 lshw -c video 查看机器的显卡型号，根据显卡型号去NVIDIA官网下载最新的驱动程序 由于系统自带了nouveau的开源驱动，在安装NVIDIA驱动前要现将其屏蔽 编辑系统黑名单 sudo vi /etc/modprobe.d/blacklist.conf 在末尾新增一行 blacklist nouveau 保存，退出，然后更新initramfs sudo update-initramfs -u 重启电脑 reboot 查看是否禁用成功 lsmod | grep nouveau 若没有输出，则表明禁用成功 卸载原驱动 sudo apt-get --purge remove nvidia-* 无论是否安装过，执行此命令是没有坏处的 停止可视化界面 sudo telinit 3 输入用户名和密码 运行下载的run文件 sudo bash NVIDIA-Linux-x86_64*****.run ，大部分选择默认提示即可，在GCC版本不匹配时，我选择了忽略，依然可以安装运行成功，目前还没有遇到问题 安装完成后重启，运行 nvidia-smi 可以看到NVIDIA的输出即安装成功 安装cuda 去CUDA官网下载所需要的版本，建议下载runfile，Base和Patch部分都建议下载 建议在安装前阅读官方的document，以cuda10.0为例，其中比较有建设性的为这里 安装一些32位的依赖123sudo dpkg --add-architecture i386 sudo apt update sudo apt install libc6:i386 接下来先运行base installer的文件 sudo sh cuda_10.0******_linux.run 注意: 运行后在提示是否安装驱动时(Install NVIDIA Accelerated Graphics Driver for Linux-x86_64 384.81?)， 选择否！，其他地方默认安装即可 在安装下载的几个补丁，安装方式相同 安装完成后，将以下命令加入到~/.bashrc当中，以改变环境变量(摘抄自官方document) 12export PATH=/usr/local/cuda-10.0/bin${PATH:+:${PATH}}export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}} 验证重启后在命令行输入 nvcc -V，会输出版本信息进入家目录下的NVIDIA-SAMPLES，编译运行deviceQuery，输出Result = PASS则证明安装成功 安装cuDNN 去cuDNN官网下载相应版本的cuDNN Library for Linux，需要注册一个账号，建议阅读官方文档 根据安装文档说明，解压.tgz并移动到相应的位置即可 至此，Deep Learning 的配置完成","link":"/2019/09/27/Step-up-to-Linux/"}],"tags":[{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"conda","slug":"conda","link":"/tags/conda/"}],"categories":[{"name":"Tech","slug":"Tech","link":"/categories/Tech/"},{"name":"Linux","slug":"Tech/Linux","link":"/categories/Tech/Linux/"}]}